#!/bin/sh

if [ $# -eq 0 ]; then
    echo "usage: $0 [-d] [-t index] [-h host] [-w | -p] {command} [args]"
    echo ''
    echo '    Runs command with args in a new tmux window (-w; default)'
    echo '    or pane (-p) and optionally via ssh on host (-h).'
    echo ''
    echo '    The -d and -t index options are passed to the tmux new-window'
    echo '    and split-window commands.'
    echo ''
fi

while getopts "dh:wpt:" opt; do
    case $opt in
        d)
            #dtach=yes
            tmuxflags="$tmuxflags -d"
            ;;
        h)
            host="$OPTARG"
            ;;
        w)
            how="window"
            ;;
        p)
            how="pane"
            ;;
        t)
            tmuxflags="$tmuxflags -t $OPTARG"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            ;;
    esac
done
shift `expr $OPTIND - 1`

do_cmd() {
    local tmuxcmd

    if [ "$how" = "pane" ]; then
        tmuxcmd="tmux split-window"
    elif [ "$how" = "window" ]; then
        tmuxcmd="tmux new-window"
    fi
    $tmuxcmd $tmuxflags "tmux rename-window '$1'; $*; echo '`basename $0`: press enter to close'; read NULL"
}

local_cmd() {
    do_cmd "$@"
}

remote_cmd() {

    # if [ -n "$dtach" ]; then
        # printf "enter name of dtach socket file to place in $host:~/dsocks/: "
        # read sockname

        # if [ -z "$sockname" ]; then
            # echo "NO name entered, I will not create a dtach'd shell then!"
            # args="$@"
        # else
            # ssh "$host" dtach -n "~/dsocks/$sockname" "$@"
            # echo "run dtach -a ~/dsocks/${sockname} to access this shell"
            # args=""
        # fi
    # fi

    do_cmd "ssh $host $@"
}


#echo "args to pass: $@ # $#"

[ -z "$how" ] && how="window"

if [ -z "$host" ]; then # running locally
    local_cmd $@
else
    remote_cmd $@
fi
