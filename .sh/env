# vim: set ft=sh :
#


#
# default file permissions -rw------- / drwx------
#
# Setting this umask tends to cause problems in certain environments (like
# work), so move this to .sh/rc.local as desired!
#
#umask 077

#
# the system should provide a suitable PATH for what we need here, 
# avoid setting it here if we can, and let the rc.local worry later.
#
if [ -z "$PATH" ]; then
    PATH="/bin:/sbin:/usr/bin:/usr/sbin"; export PATH
fi

# append ~/sw/{sh.local,sh,bin} to path
#
PATH="${PATH}:${HOME}/sw/sh.local:${HOME}/sw/sh:${HOME}/sw/bin:${HOME}/sw/sbin"

# only set if it exists.
if [ -n "$PS1" ]; then
    # my standard issue prompt  (overriden later, based on $SHELL)
    PS1="${USER}@${HOSTNAME}-$ "
    export PS1
fi

# Attempt to override default timezone; I prefer UTC
TZ='Etc/UTC'; export TZ

# prefer megabytes over 512 byte blocks.
BLOCKSIZE='M'; export BLOCKSIZE

# set my pager
PAGER="`find_in_normpath less`"
LESS='-FiJqXR'  # default options to less
export PAGER LESS

#
# set my default editor, if not found then go in on order of preference.
#
EDITOR="`find_in_normpath vim nvi vi mg ed | grep -v 'not found:' | head -n 1`"
VISUAL="$EDITOR"
export EDITOR VISUAL

#
# for ircII
#
IRCNICK=Spidey01
IRCNAME=TMPS01
IRCSERVER=chat.freenode.net
export IRCNICK IRCNAME IRCSERVER

# Set a variable to work like LD_LIBRARY_PATH. This is used by most systems I
# use (Linux, *BSD). Other systems should use ~/.sh/env.d/$OS_NAME to set the
# correct value from this variable and/or unset this one.
#
LD_LIBRARY_PATH="${HOME}/sw/lib"
export LD_LIBRARY_PATH

# Pick up programs/modules from Ruby gems
#
if find_in_normpath ruby; then
    RUBYLIB="$HOME/.gem/ruby/`get_ruby_major_version`/lib:$RUBYLIB"; export RUBYLIB
    PATH="$HOME/.gem/ruby/`get_ruby_major_version`/bin:$PATH"
fi

# Python stuff
#
if find_in_normpath python; then
    PYTHONSTARTUP="${HOME}/.pythonrc"
    [ ! -f "$PYTHONSTARTUP" ] && touch "$PYTHONSTARTUP"
    PYTHONPATH="${HOME}/sw/lib/python`get_python_major_version`/site-packages:$PYTHONPATH"
    export PYTHONSTARTUP PYTHONPATH
fi

# test for ssh to local host and assume GUI. Unset in rc.local if needed!
if [ -z "$DISPLAY" ]; then
	if [ "`echo $SSH_CONNECTION | cut -f1 -d' '`" = "127.0.0.1" -a \
         "`echo $SSH_CONNECTION | cut -f3 -d' '`" = "127.0.0.1" ]; then
        DISPLAY=":0.0"
        export DISPLAY
	fi
fi

