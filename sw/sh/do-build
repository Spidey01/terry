#!/usr/bin/env bash
#
# Helper script for doing some builds in a (s)chroot. It's a make wrapper with
# logging (script) and support for notifying the user. E.g. run a build on a
# faster build server and make your workstation beep on completion.
#

#
# default beep oughta be around 750hz IAW man beep; so 900 sounds diff enough on my boxen. YMMV!
#
BEEP_COMMAND="beep -l 600 -n -f 900 -l 200 -n -l 600"

#
# default log file name because I hate compiler errors.
#
log_file=ihateyou

usage() {
    echo "usage: `basename $0` [options] [make args]"
    echo
    echo "  -b          Beep when done."
    echo "  -c CHROOT   Run command in CHROOT via schroot."
    echo "  -h HOST     SSH into HOST for -b / beep when done."
    echo "  -l FILE     Save transcript to FILE."
    # echo "  "
    echo
}

while getopts "bh:c:l:" opt; do
    case $opt in
        b)
            want_callback=true
            ;;
        c)
            want_chroot=$OPTARG
            ;;
        h)
            ssh_host=$OPTARG
            ;;
        l)
            log_file=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit $OPTERR
            ;;
    esac
done
shift `expr $OPTIND - 1`

# no args: display usage.
[ $# -eq 0 ] && usage && exit 0

notify_user() {
    if [ -n "$ssh_host" ]; then
        ssh "$ssh_host" "$BEEP_COMMAND"
    else
        eval "$BEEP_COMMAND"
    fi
}


build_it() {
    # exec script -c "schroot -c $chroot make $@" "$log_file"
    [ -f "$log_file" ] && mv "$log_file" "${log_file}.before"
    # echo "log_file=$log_file"
    # echo "chroot=$chroot"
    # echo "make args=$*"
    script -c "schroot -c $chroot make $*" "$log_file"
    [ -n "$want_callback" ] && notify_user
}


if [ -z "$want_chroot" ]; then
    echo "Select chroot to run make in"

    select chroot in `schroot -l`; do
        break
    done
else
    chroot=$want_chroot
fi
build_it "$@"
echo "Back to normal shell."
