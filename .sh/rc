# vim: set ft=sh ai si ts=4 sw=4 et :
#
# My personal Bourne-style Shell resource configuration profile.
#
# This should be portable across virtually all Bourne shells and operating
# systems, as long as aliases and functions are supported.
#
# portable environment data is sourced from ~/.sh/env
# portable functions are sourced from ~/.sh/funcs
# portable aliases are sourced from ~/.sh/aliases
#
# system specific environment data is sourced from ~/.sh/env.d/osname
# system specific functions are sourced from ~/.sh/funcs.d/osname
# system specific alias are sourced from ~/.sh/aliases.d/osname
#
# ~/.sh/rc.local is sourced after everything else, to privide system local changes.
#

#
# include library functions for the ~/.sh setup in general.
#
    . "${HOME}/.sh/lib"

#
# set my standard environment, functions, and aliases
#
    . "${HOME}/.sh/env"
    . "${HOME}/.sh/funcs"
    . "${HOME}/.sh/aliases"

#
# Set a string of OS_* variables to the portable subset of uname outputs
#
    OS_ARCH=`uname -m`
    OS_NAME=`uname -s`
    OS_RELLVL=`uname -r`
    export OS_ARCH OS_NAME OS_RELLVL
#
# Cache the current machines hostname. hostname -s is not portable enough for
# getting the short form of our current machines hostname, so do this instead
# of invoking hostname -s whenever needed. 
#
    HOSTNAME="`echo ${HOSTNAME:-\`uname -n\`} | sed 's/\..*//'`"
    export HOSTNAME

#
# set shell specific settings
#
    case `basename $SHELL` in
        'sh')
            . ~/.sh/rc.d/sh
            ;;
        'bash')
            . ~/.sh/rc.d/bash
            ;;
        'ksh' | 'pdksh' | 'mksh' | 'ksh88' | 'ksh93')
            . ~/.sh/rc.d/ksh
            ;;
        'zsh')
            . ~/.sh/rc.d/zsh
            ;;
    esac


#
# parse platform specific environment, functions, and aliases
#
    [ -f "${HOME}/.sh/env.d/${OS_NAME}" ]     && . "${HOME}/.sh/env.d/${OS_NAME}"
    [ -f "${HOME}/.sh/funcs.d/${OS_NAME}" ]   && . "${HOME}/.sh/funcs.d/${OS_NAME}"
    [ -f "${HOME}/.sh/aliases.d/${OS_NAME}" ] && . "${HOME}/.sh/aliases.d/${OS_NAME}"

#
# give a fortune cookie and the current date/time on login.
# unless it is a non-interactive SSH session.
#
if [ -n "$SSH_TTY" -o -z "$SSH_CONNECTION" ]; then
    [ -x /usr/games/fortune ] && /usr/games/fortune -aes
    echo ''; echo ''
    echo "To days date is: `date`"
fi

#
# parse site local additions
#
    [ -f "${HOME}/.sh/rc.local" ] && . "${HOME}/.sh/rc.local"


