#!/usr/bin/env bash
#
# Most sh support select, as do bash and korn.  Dash does not, and bash is more
# likely to be found than ksh under Linux systems. So use bash until I feel
# like writing my own select.
#
# TODO: write own (sh compatible) select, so that a proper session selection is possible instead of relying on session names.
#

newtmuxsession() {
    local defname tmsn actual
    
    if [ -z "$1" ]; then
        # defname="TMUX-$$"
        defname="$(basename $PWD)"
        printf "choose a name for this session [$defname]: "; read tmsn
        actual="${tmsn:-$defname}"
    else
        actual="$1"
    fi

    set-xterm-title.sh "$actual"
    exec tmux new-session -s "$actual"
}


attachtmuxsession() {
    set-xterm-title.sh "$1"
    exec tmux attach -t "$1"
}


# for some reason bash doesn't like this unless I use a var.
#
tmsl="`tmux ls 2>/dev/null | sed -e 's/:.*$//g'`"

if [ $# -gt 0 ]; then
    name=""
    if [ -z "$tmsl" ]; then
        for existing in $(tmux ls | cut -d: -f1); do
            if [ "$existing" = "$1" ]; then
                name="$1"
                break
            fi
        done
    fi

    if [ -z "$name" ]; then
        newtmuxsession "$1"
    else
        attachtmuxsession "$name"
    fi

    exit
fi

select tms in "new-session" $tmsl; do
    if [ "$tms" = "new-session" ]; then
        newtmuxsession
    else
        attachtmuxsession "tms"
    fi
done
